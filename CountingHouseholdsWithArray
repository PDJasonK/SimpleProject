package Arrays;

public class AptPopulation {

	public static void main(String[] args) {
		int [] [] [] household = {
				{{1,2,3} , {4,5,6} , {7} , {8,9,10},{11,12,13}},
					{{14,45,16}, {17,18,19},{20},{21,22,23},{24,25,26}}
				};
		System.out.printf("\t1동 1층 1세대 : %d\t " , household[0][0][0]); 
		System.out.printf("1동 1층 2세대 : %d\t " , household[0][0][1]); 
		System.out.printf("1동 1층 3세대 : %d\n " , household[0][0][2]); 
		//배열은 1부터가아닌 0부터시작하기에 000 이라하면 위에 입력된 int 의 제일첫번째 값을 이용한다.
		//1층의 수는 첫배열 { } 내에만 존재하기에 앞의 두숫자는 0으로두어야 첫번쨰로설정된다.		
		

		System.out.printf("\t1동 2층 1세대 : %d\t " , household[0][1][0]); 
		System.out.printf("1동 2층 2세대 : %d\t " , household[0][1][1]); 
		System.out.printf("1동 2층 3세대 : %d\n " , household[0][1][2]); 
		
		
		System.out.printf("\t1동 3층 1세대 : %d\n " , household[0][2][0]); 

		System.out.printf("\t1동 4층 1세대 : %d\t " , household[0][3][0]); 
		System.out.printf("1동 4층 2세대 : %d\t " , household[0][3][1]); 
		System.out.printf("1동 4층 3세대 : %d\n " , household[0][3][2]); 

		
		System.out.printf("\t1동 5층 1세대 : %d\t " , household[0][4][0]); 
		System.out.printf("1동 5층 2세대 : %d\t " , household[0][4][1]); 
		System.out.printf("1동 5층 3세대 : %d\n " , household[0][4][2]); 
// {{numbers }} 를이용해 두칸으로 나누었기에 현재의 데이터에는 동 마저 바꿀수있다.
		System.out.printf("\n\n --------------------------"
				+ "----------------------------------------------------- \n\n\n");
		
		System.out.printf("\t2동 1층 1세대 : %d\t " , household[1][0][0]); 
		System.out.printf("2동 1층 2세대 : %d\t " , household[1][0][1]); 
		System.out.printf("2동 1층 3세대 : %d\n " , household[1][0][2]); 
		
		System.out.printf("\t2동 2층 1세대 : %d\t " , household[1][1][0]); 
		System.out.printf("2동 2층 2세대 : %d\t " , household[1][1][1]); 
		System.out.printf("2동 2층 3세대 : %d\n " , household[1][1][2]); 
		
		System.out.printf("\t2동 3층 1세대 : %d\t " , household[1][2][0]); 

		System.out.printf("\t2동 4층 1세대 : %d\t " , household[1][3][0]); 
		System.out.printf("2동 4층 2세대 : %d\t " , household[1][3][1]); 
		System.out.printf("2동 4층 3세대 : %d\n " , household[1][3][2]); 


		
	}
}
